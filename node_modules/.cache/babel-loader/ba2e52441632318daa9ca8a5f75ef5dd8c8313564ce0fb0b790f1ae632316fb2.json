{"ast":null,"code":"var _jsxFileName = \"/Users/marwaderbel/workspace/P5/src/components/Collapse.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { arrow } from \"../assests/arrow down.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Collapse = ({\n  collapseTitle,\n  collapseDescription\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const contentRef = useRef(null);\n\n  // Fonction pour inverser l'état d'ouverture du collapse\n  const toggleCollapse = () => {\n    setIsOpen(prevState => !prevState);\n  };\n  useEffect(() => {\n    const content = contentRef.current;\n    if (isOpen) {\n      // Si le collapse est ouvert, on définit la hauteur maximale comme étant la hauteur du contenu\n      content.style.maxHeight = `${content.scrollHeight}px`;\n    } else {\n      content.style.maxHeight = \"0px\";\n    }\n  }, [isOpen]); //useEffect sera déclenché à chaque fois que isOpen change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapse-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse-title-container\",\n      onClick: toggleCollapse,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse-title\",\n        children: [collapseTitle, /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrow,\n          alt: \"fl\\xEAche\",\n          className: `arrow-icon ${isOpen ? \"arrow-up\" : \"arrow-down\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: contentRef,\n      className: `collapse-description ${isOpen ? \"open\" : \"\"}`,\n      children: collapseDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n\n// Définition des prop types pour assurer que les bonnes propriétés sont passées au composant\n_s(Collapse, \"xRa9jpUWeIaI6aPcmyEglWFDTQE=\");\n_c = Collapse;\nCollapse.propTypes = {\n  collapseTitle: PropTypes.string.isRequired,\n  collapseDescription: PropTypes.node.isRequired // Description du collapse, peut être n'importe quel noeud React\n};\nexport default Collapse;\nvar _c;\n$RefreshReg$(_c, \"Collapse\");","map":{"version":3,"names":["React","useState","useRef","useEffect","PropTypes","arrow","jsxDEV","_jsxDEV","Collapse","collapseTitle","collapseDescription","_s","isOpen","setIsOpen","contentRef","toggleCollapse","prevState","content","current","style","maxHeight","scrollHeight","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","propTypes","string","isRequired","node","$RefreshReg$"],"sources":["/Users/marwaderbel/workspace/P5/src/components/Collapse.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport{arrow} from \"../assests/arrow down.png\"\n\nconst Collapse = ({ collapseTitle, collapseDescription }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    \n    const contentRef = useRef(null);\n  \n    // Fonction pour inverser l'état d'ouverture du collapse\n    const toggleCollapse = () => {\n      setIsOpen(prevState => !prevState);\n    };\n  \n    useEffect(() => {\n      const content = contentRef.current;\n      if (isOpen) {\n        // Si le collapse est ouvert, on définit la hauteur maximale comme étant la hauteur du contenu\n        content.style.maxHeight = `${content.scrollHeight}px`;\n      } else {\n        content.style.maxHeight = \"0px\";\n      }\n    }, [isOpen]); //useEffect sera déclenché à chaque fois que isOpen change\n  \n    return (\n      <div className=\"collapse-container\">\n        {/* Conteneur du titre qui, lorsqu'il est cliqué, déclenche le basculement de l'état */}\n        <div className=\"collapse-title-container\" onClick={toggleCollapse}>\n          <div className=\"collapse-title\">\n            {collapseTitle}\n            {/* Image de la flèche qui change d'orientation en fonction de l'état isOpen */}\n            <img\n              src={arrow}\n              alt=\"flêche\"\n              className={`arrow-icon ${isOpen ? \"arrow-up\" : \"arrow-down\"}`}\n            />\n          </div>\n        </div>\n        {/* Conteneur de la description du collapse, avec une référence pour ajuster la hauteur */}\n        <div\n          ref={contentRef}\n          className={`collapse-description ${isOpen ? \"open\" : \"\"}`}\n        >\n          {collapseDescription}\n        </div>\n      </div>\n    );\n  };\n  \n  // Définition des prop types pour assurer que les bonnes propriétés sont passées au composant\n  Collapse.propTypes = {\n    collapseTitle: PropTypes.string.isRequired,\n    collapseDescription: PropTypes.node.isRequired, // Description du collapse, peut être n'importe quel noeud React\n  };\n  \n  export default Collapse;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAAOC,KAAK,QAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMa,UAAU,GAAGZ,MAAM,CAAC,IAAI,CAAC;;EAE/B;EACA,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAC3BF,SAAS,CAACG,SAAS,IAAI,CAACA,SAAS,CAAC;EACpC,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd,MAAMc,OAAO,GAAGH,UAAU,CAACI,OAAO;IAClC,IAAIN,MAAM,EAAE;MACV;MACAK,OAAO,CAACE,KAAK,CAACC,SAAS,GAAG,GAAGH,OAAO,CAACI,YAAY,IAAI;IACvD,CAAC,MAAM;MACLJ,OAAO,CAACE,KAAK,CAACC,SAAS,GAAG,KAAK;IACjC;EACF,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd,oBACEL,OAAA;IAAKe,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAEjChB,OAAA;MAAKe,SAAS,EAAC,0BAA0B;MAACE,OAAO,EAAET,cAAe;MAAAQ,QAAA,eAChEhB,OAAA;QAAKe,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5Bd,aAAa,eAEdF,OAAA;UACEkB,GAAG,EAAEpB,KAAM;UACXqB,GAAG,EAAC,WAAQ;UACZJ,SAAS,EAAE,cAAcV,MAAM,GAAG,UAAU,GAAG,YAAY;QAAG;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENvB,OAAA;MACEwB,GAAG,EAAEjB,UAAW;MAChBQ,SAAS,EAAE,wBAAwBV,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;MAAAW,QAAA,EAEzDb;IAAmB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAnB,EAAA,CA7CIH,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA8CZA,QAAQ,CAACyB,SAAS,GAAG;EACnBxB,aAAa,EAAEL,SAAS,CAAC8B,MAAM,CAACC,UAAU;EAC1CzB,mBAAmB,EAAEN,SAAS,CAACgC,IAAI,CAACD,UAAU,CAAE;AAClD,CAAC;AAED,eAAe3B,QAAQ;AAAC,IAAAwB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}