{"ast":null,"code":"var _jsxFileName = \"/Users/marwaderbel/workspace/P5/src/components/Collapse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport Arrow from \"../assets/arrow/arrow.svg\";\nimport \"../style/Collapse.scss\";\n\n// Le composant Collapse prend un titre (collapseTitle) et un contenu (children) en tant que props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Collapse({\n  collapseTitle,\n  children\n}) {\n  _s();\n  // Utilisation du hook useState pour gérer l'état \"open\" qui indique si le contenu est visible ou non\n  const [open, setOpen] = useState(false);\n\n  // Fonction pour basculer l'état \"open\" lorsqu'on clique sur le titre\n  const toggle = () => {\n    setOpen(!open);\n  };\n  // Utilisation du hook useRef pour obtenir une référence directe à l'élément DOM contenant le contenu du collapse\n  const contentRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapse-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse-title\",\n      onClick: toggle,\n      children: [collapseTitle, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        \"aria-expanded\": open ? \"true\" : \"false\" // Attribut ARIA pour indiquer l'état du collapse\n        ,\n        \"aria-controls\": \"collapse-parent\" // Attribut ARIA pour indiquer l'élément contrôlé\n        ,\n        \"aria-label\": \"open this collapse\" // Attribut ARIA pour donner une description accessible du bouton\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Arrow,\n          className: `Arrow ${open ? \"down\" : \"\"}` // Applique la classe \"down\" si le collapse est ouvert\n          ,\n          alt: \"Ouvrir l'article\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"collapse-parent\"\n      // Affiche ou masque le contenu selon l'état \"open\"\n      ,\n      className: open ? \"collapse-parent show\" : \"collapse-parent hide\"\n      // Référence à l'élément DOM pour calculer dynamiquement la hauteur\n      ,\n      ref: contentRef,\n      style: open ? {\n        height: contentRef.current.scrollHeight + \"px\"\n      } // Si ouvert, définit la hauteur selon le contenu\n      : {\n        height: \"0px\"\n      } // Si fermé, la hauteur est 0\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse-content\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Collapse, \"79di5KqecgaE1o3ES2dYZKl2hpI=\");\n_c = Collapse;\nexport default Collapse;\nvar _c;\n$RefreshReg$(_c, \"Collapse\");","map":{"version":3,"names":["React","useState","useRef","Arrow","jsxDEV","_jsxDEV","Collapse","collapseTitle","children","_s","open","setOpen","toggle","contentRef","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","style","height","current","scrollHeight","_c","$RefreshReg$"],"sources":["/Users/marwaderbel/workspace/P5/src/components/Collapse.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Arrow from \"../assets/arrow/arrow.svg\";\nimport \"../style/Collapse.scss\";\n\n// Le composant Collapse prend un titre (collapseTitle) et un contenu (children) en tant que props\nfunction Collapse({ collapseTitle, children }) {\n\n  // Utilisation du hook useState pour gérer l'état \"open\" qui indique si le contenu est visible ou non\n  const [open, setOpen] = useState(false); \n\n  // Fonction pour basculer l'état \"open\" lorsqu'on clique sur le titre\n  const toggle = () => {\n    setOpen(!open);\n  };\n  // Utilisation du hook useRef pour obtenir une référence directe à l'élément DOM contenant le contenu du collapse\n  const contentRef = useRef();\n\n  return (\n    <div className=\"collapse-container\">\n        {/* Titre du collapse qui déclenche l'ouverture ou la fermeture */}\n      <div className=\"collapse-title\" onClick={toggle}>\n\n        {collapseTitle} {/* Affiche le titre passé en tant que prop */}\n        \n        <button className=\"button\"\n          aria-expanded={open ? \"true\" : \"false\"} // Attribut ARIA pour indiquer l'état du collapse\n          aria-controls=\"collapse-parent\" // Attribut ARIA pour indiquer l'élément contrôlé\n          aria-label=\"open this collapse\" // Attribut ARIA pour donner une description accessible du bouton\n        >\n          <img\n            src={Arrow}\n            className={`Arrow ${open ? \"down\" : \"\"}`} // Applique la classe \"down\" si le collapse est ouvert\n            alt=\"Ouvrir l'article\"  \n          />\n        </button>\n      </div>\n\n      <div\n        id=\"collapse-parent\"\n        // Affiche ou masque le contenu selon l'état \"open\"\n        className={open ? \"collapse-parent show\" : \"collapse-parent hide\"} \n        // Référence à l'élément DOM pour calculer dynamiquement la hauteur\n        ref={contentRef} \n        style={\n          open\n            ? { height: contentRef.current.scrollHeight + \"px\" } // Si ouvert, définit la hauteur selon le contenu\n            : { height: \"0px\" } // Si fermé, la hauteur est 0\n        }\n      >\n        <div className=\"collapse-content\">{children}</div> {/* Affichage du contenu passé en tant qu'enfant */}\n      </div>\n    </div>\n  );\n}\n\nexport default Collapse;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,OAAO,wBAAwB;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,QAAQA,CAAC;EAAEC,aAAa;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAE7C;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAEvC;EACA,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnBD,OAAO,CAAC,CAACD,IAAI,CAAC;EAChB,CAAC;EACD;EACA,MAAMG,UAAU,GAAGX,MAAM,CAAC,CAAC;EAE3B,oBACEG,OAAA;IAAKS,SAAS,EAAC,oBAAoB;IAAAN,QAAA,gBAEjCH,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAACC,OAAO,EAAEH,MAAO;MAAAJ,QAAA,GAE7CD,aAAa,EAAC,GAAC,eAEhBF,OAAA;QAAQS,SAAS,EAAC,QAAQ;QACxB,iBAAeJ,IAAI,GAAG,MAAM,GAAG,OAAQ,CAAC;QAAA;QACxC,iBAAc,iBAAiB,CAAC;QAAA;QAChC,cAAW,oBAAoB,CAAC;QAAA;QAAAF,QAAA,eAEhCH,OAAA;UACEW,GAAG,EAAEb,KAAM;UACXW,SAAS,EAAE,SAASJ,IAAI,GAAG,MAAM,GAAG,EAAE,EAAG,CAAC;UAAA;UAC1CO,GAAG,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENhB,OAAA;MACEiB,EAAE,EAAC;MACH;MAAA;MACAR,SAAS,EAAEJ,IAAI,GAAG,sBAAsB,GAAG;MAC3C;MAAA;MACAa,GAAG,EAAEV,UAAW;MAChBW,KAAK,EACHd,IAAI,GACA;QAAEe,MAAM,EAAEZ,UAAU,CAACa,OAAO,CAACC,YAAY,GAAG;MAAK,CAAC,CAAC;MAAA,EACnD;QAAEF,MAAM,EAAE;MAAM,CAAC,CAAC;MACvB;MAAAjB,QAAA,gBAEDH,OAAA;QAAKS,SAAS,EAAC,kBAAkB;QAAAN,QAAA,EAAEA;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACZ,EAAA,CAhDQH,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAkDjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}