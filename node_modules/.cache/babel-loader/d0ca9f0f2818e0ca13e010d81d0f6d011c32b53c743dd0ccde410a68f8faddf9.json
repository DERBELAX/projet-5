{"ast":null,"code":"var _jsxFileName = \"/Users/marwaderbel/workspace/P5/src/components/Collapse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Arrow from \"../assests/arrow/arrow.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Collapse = ({\n  collapseTitle,\n  collapseDescription\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const contentRef = useRef(null);\n\n  // Function to toggle the collapse state\n  const toggleCollapse = () => {\n    setIsOpen(prevState => !prevState);\n  };\n  useEffect(() => {\n    const content = contentRef.current;\n    if (isOpen) {\n      // If the collapse is open, set the maxHeight to the scrollHeight of the content\n      content.style.maxHeight = `${content.scrollHeight}px`;\n    } else {\n      // If the collapse is closed, set the maxHeight to 0\n      content.style.maxHeight = \"0px\";\n    }\n  }, [isOpen]); // useEffect will trigger whenever isOpen changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapse-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse-title-container\",\n      onClick: toggleCollapse,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse-title\",\n        children: [collapseTitle, /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Arrow,\n          alt: \"arrow\",\n          className: `arrow ${isOpen ? \"arrow-up\" : \"arrow-down\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: contentRef,\n      className: `collapse-description ${isOpen ? \"open\" : \"\"}`,\n      children: collapseDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n// Define prop types to ensure the correct properties are passed to the component\n_s(Collapse, \"xRa9jpUWeIaI6aPcmyEglWFDTQE=\");\n_c = Collapse;\nCollapse.propTypes = {\n  collapseTitle: PropTypes.string.isRequired,\n  collapseDescription: PropTypes.node.isRequired // Description can be any React node\n};\nexport default Collapse;\nvar _c;\n$RefreshReg$(_c, \"Collapse\");","map":{"version":3,"names":["React","useState","useRef","useEffect","PropTypes","Arrow","jsxDEV","_jsxDEV","Collapse","collapseTitle","collapseDescription","_s","isOpen","setIsOpen","contentRef","toggleCollapse","prevState","content","current","style","maxHeight","scrollHeight","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","propTypes","string","isRequired","node","$RefreshReg$"],"sources":["/Users/marwaderbel/workspace/P5/src/components/Collapse.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Arrow from \"../assests/arrow/arrow.svg\";\n\nconst Collapse = ({ collapseTitle, collapseDescription }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const contentRef = useRef(null);\n\n    // Function to toggle the collapse state\n    const toggleCollapse = () => {\n        setIsOpen(prevState => !prevState);\n    };\n\n    useEffect(() => {\n        const content = contentRef.current;\n        if (isOpen) {\n            // If the collapse is open, set the maxHeight to the scrollHeight of the content\n            content.style.maxHeight = `${content.scrollHeight}px`;\n        } else {\n            // If the collapse is closed, set the maxHeight to 0\n            content.style.maxHeight = \"0px\";\n        }\n    }, [isOpen]); // useEffect will trigger whenever isOpen changes\n\n    return (\n        <div className=\"collapse-container\">\n            {/* Title container that triggers the toggle function when clicked */}\n            <div className=\"collapse-title-container\" onClick={toggleCollapse}>\n                <div className=\"collapse-title\">\n                    {collapseTitle}\n                    {/* Arrow image that changes orientation based on the isOpen state */}\n                    <img\n                        src={Arrow}\n                        alt=\"arrow\"\n                        className={`arrow ${isOpen ? \"arrow-up\" : \"arrow-down\"}`}\n                    />\n                </div>\n            </div>\n            {/* Description container with a ref to adjust the height */}\n            <div\n                ref={contentRef}\n                className={`collapse-description ${isOpen ? \"open\" : \"\"}`}\n            >\n                {collapseDescription}\n            </div>\n        </div>\n    );\n};\n\n// Define prop types to ensure the correct properties are passed to the component\nCollapse.propTypes = {\n    collapseTitle: PropTypes.string.isRequired,\n    collapseDescription: PropTypes.node.isRequired, // Description can be any React node\n};\n\nexport default Collapse;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMa,UAAU,GAAGZ,MAAM,CAAC,IAAI,CAAC;;EAE/B;EACA,MAAMa,cAAc,GAAGA,CAAA,KAAM;IACzBF,SAAS,CAACG,SAAS,IAAI,CAACA,SAAS,CAAC;EACtC,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZ,MAAMc,OAAO,GAAGH,UAAU,CAACI,OAAO;IAClC,IAAIN,MAAM,EAAE;MACR;MACAK,OAAO,CAACE,KAAK,CAACC,SAAS,GAAG,GAAGH,OAAO,CAACI,YAAY,IAAI;IACzD,CAAC,MAAM;MACH;MACAJ,OAAO,CAACE,KAAK,CAACC,SAAS,GAAG,KAAK;IACnC;EACJ,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd,oBACIL,OAAA;IAAKe,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAE/BhB,OAAA;MAAKe,SAAS,EAAC,0BAA0B;MAACE,OAAO,EAAET,cAAe;MAAAQ,QAAA,eAC9DhB,OAAA;QAAKe,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC1Bd,aAAa,eAEdF,OAAA;UACIkB,GAAG,EAAEpB,KAAM;UACXqB,GAAG,EAAC,OAAO;UACXJ,SAAS,EAAE,SAASV,MAAM,GAAG,UAAU,GAAG,YAAY;QAAG;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENvB,OAAA;MACIwB,GAAG,EAAEjB,UAAW;MAChBQ,SAAS,EAAE,wBAAwBV,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;MAAAW,QAAA,EAEzDb;IAAmB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAED;AAAAnB,EAAA,CA7CMH,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA8CdA,QAAQ,CAACyB,SAAS,GAAG;EACjBxB,aAAa,EAAEL,SAAS,CAAC8B,MAAM,CAACC,UAAU;EAC1CzB,mBAAmB,EAAEN,SAAS,CAACgC,IAAI,CAACD,UAAU,CAAE;AACpD,CAAC;AAED,eAAe3B,QAAQ;AAAC,IAAAwB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}